[versions]
datafaker = '2.3.1'
geb = '6.0'
gorm-hibernate5 = '8.1.1'
gorm-logical-delete = '2.0.0.M2'
grails = '6.2.1'
grails-csrf = '1.0.0'
grails-geb = '4.0.0'
grails-gsp = '6.2.4'
grails-events = '5.0.2'
grails-inertia = '2.1.3'
grails-spring-security-core = '6.1.1'
grails-testing-support = '3.2.2'
grails-views = '3.2.3'
groovy = '3.0.23'
h2database = '2.3.232'
hikari = '6.2.1'
imgscalr = '4.2'
metadata-extractor = '2.19.0'
micronaut = '3.10.4'
netty = '4.1.116.Final'
selenium = '4.27.0'
slf4j = '1.7.36'
spock = '2.3-groovy-3.0'
spring = '5.3.39'
spring-boot = '2.7.18'
spring-security = '5.8.16'
squiggly = '2.0.1'
tomcat = '9.0.98'

[libraries]
datafaker = { module = 'net.datafaker:datafaker', version.ref = 'datafaker' }
geb-core = { module = 'org.gebish:geb-core', version.ref = 'geb' }
geb-spock = { module = 'org.gebish:geb-spock', version.ref = 'geb' }
gorm-hibernate5 = { module = 'org.grails.plugins:hibernate5', version.ref = 'gorm-hibernate5' }
grails-core = { module = 'org.grails:grails-core', version.ref = 'grails' }
grails-i18n = { module = 'org.grails:grails-plugin-i18n', version.ref = 'grails' }
grails-interceptors = { module = 'org.grails:grails-plugin-interceptors', version.ref = 'grails' }
grails-services = { module = 'org.grails:grails-plugin-services', version.ref = 'grails' }
grails-urlmappings = { module = 'org.grails:grails-plugin-url-mappings', version.ref = 'grails' }
grails-webCommon = { module = 'org.grails:grails-web-common', version.ref = 'grails' }
grails-webDatabinding = { module = 'org.grails:grails-web-databinding', version.ref = 'grails' }
grailsCsrf = { module = 'io.github.matrei:grails-csrf', version.ref = 'grails-csrf' }
grailsEvents = { module = 'org.grails.plugins:events', version.ref = 'grails-events' }
grailsGeb = { module = 'org.grails.plugins:geb', version.ref = 'grails-geb' }
grailsGormLogicalDelete = { module = 'org.grails.plugins:gorm-logical-delete', version.ref = 'gorm-logical-delete' }
grailsGsp = { module = 'org.grails.plugins:gsp', version.ref = 'grails-gsp' }
grailsInertia = { module = 'io.github.matrei:grails-inertia-plugin', version.ref = 'grails-inertia' }
grailsSpringSecurity-core = { module = 'org.grails.plugins:spring-security-core', version.ref = 'grails-spring-security-core' }
grailsTestingSupport-gorm = { module = 'org.grails:grails-gorm-testing-support', version.ref = 'grails-testing-support' }
grailsTestingSupport-web = { module = 'org.grails:grails-web-testing-support', version.ref = 'grails-testing-support' }
grailsViews-json = { module = 'org.grails.plugins:views-json', version.ref = 'grails-views' }
groovy-test = { module = 'org.codehaus.groovy:groovy-test', version.ref = 'groovy' }
h2database = { module = 'com.h2database:h2', version.ref = 'h2database' }
hikari = { module = 'com.zaxxer:HikariCP', version.ref = 'hikari' }
imgscalr = { module = 'org.imgscalr:imgscalr-lib', version.ref = 'imgscalr' }
metadataExtractor = { module = 'com.drewnoakes:metadata-extractor', version.ref = 'metadata-extractor' }
micronaut-httpClient = { module = 'io.micronaut:micronaut-http-client', version.ref = 'micronaut' }
micronaut-injectGroovy = { module = 'io.micronaut:micronaut-inject-groovy', version.ref = 'micronaut' }
selenium-api = { module = 'org.seleniumhq.selenium:selenium-api', version.ref = 'selenium' }
selenium-chromeDriver = { module = 'org.seleniumhq.selenium:selenium-chrome-driver', version.ref = 'selenium' }
selenium-chromiumDriver = { module = 'org.seleniumhq.selenium:selenium-chromium-driver', version.ref = 'selenium' }
selenium-devtoolsV85 = { module = 'org.seleniumhq.selenium:selenium-devtools-v85', version.ref = 'selenium' }
selenium-firefoxDriver = { module = 'org.seleniumhq.selenium:selenium-firefox-driver', version.ref = 'selenium' }
selenium-http = { module = 'org.seleniumhq.selenium:selenium-http', version.ref = 'selenium' }
selenium-json = { module = 'org.seleniumhq.selenium:selenium-json', version.ref = 'selenium' }
selenium-remoteDriver = { module = 'org.seleniumhq.selenium:selenium-remote-driver', version.ref = 'selenium' }
selenium-support = { module = 'org.seleniumhq.selenium:selenium-support', version.ref = 'selenium' }
slf4j-nop = { module = 'org.slf4j:slf4j-nop', version.ref = 'slf4j' }
springBoot-autoconfigure = { module = 'org.springframework.boot:spring-boot-autoconfigure', version.ref = 'spring-boot' }
springBoot-starterLogging = { module = 'org.springframework.boot:spring-boot-starter-logging', version.ref = 'spring-boot' }
springBoot-starterTomcat = { module = 'org.springframework.boot:spring-boot-starter-tomcat', version.ref = 'spring-boot' }
springSecurity-core = { module = 'org.springframework.security:spring-security-core', version.ref = 'spring-security' }
springSecurity-crypto = { module = 'org.springframework.security:spring-security-crypto', version.ref = 'spring-security' }
springSecurity-web = { module = 'org.springframework.security:spring-security-web', version.ref = 'spring-security' }
spock-core = { module = 'org.spockframework:spock-core', version.ref = 'spock' }
squiggly = { module = 'dev.nicklasw:squiggly-filter-jackson', version.ref = 'squiggly' }

# These are transitive dependencies, added here for dependency update robots
# as the BOM versions are overridden in build.gradle
netty-codecHttp = { module = 'io.netty:netty-codec-http', version.ref = 'netty' }
spring-core = { module = 'org.springframework:spring-core', version.ref = 'spring' }
tomcat-embedCore = { module = 'org.apache.tomcat.embed:tomcat-embed-core', version.ref = 'tomcat' }

[bundles]
geb = ['grailsGeb', 'geb-core', 'geb-spock']
grailsTestingSupport = ['grailsTestingSupport-gorm', 'grailsTestingSupport-web']
selenium = ['selenium-api', 'selenium-chromeDriver', 'selenium-chromiumDriver', 'selenium-devtoolsV85', 'selenium-firefoxDriver', 'selenium-http', 'selenium-json', 'selenium-remoteDriver', 'selenium-support']
springSecurity = ['springSecurity-core', 'springSecurity-crypto', 'springSecurity-web']